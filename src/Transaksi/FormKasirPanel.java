/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Transaksi;

import Koneksi.Koneksi;
import com.formdev.flatlaf.FlatClientProperties;
import java.sql.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author Diaz Nuraji
 */
public class FormKasirPanel extends javax.swing.JPanel {

    private static Connection cn;
    private static ResultSet rs;
    private static Statement st;
    private static PreparedStatement pst;
    public static String[] barang = new String[10];

    /**
     * Creates new form FormEventPanel
     */
    public FormKasirPanel() {
        initComponents();
        txtIDPegawai.setText(Login.FormLoginFrame.namaPegawai);
        txtTransaksi.setText(GenerateID()[0]);
        txtDTransaksi.setText(GenerateID()[1]);
        pnKasir.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:12;" // Sudut
                + "background:$Login.background");
        lbTitleKasir.putClientProperty(FlatClientProperties.STYLE, ""
                + "font:+bold +20");
    }

    public String[] GenerateID() {
        String id[] = new String[2];
        Random random = new Random();
        // Random number 10000000 to 99999999
        int number = random.nextInt(89999999) + 10000000;
        id[0] = "TRX_" + number;
        id[1] = "DTRX_" + number;
        return id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnKasir = new javax.swing.JPanel();
        lbTitleKasir = new javax.swing.JLabel();
        txtIDPegawai = new javax.swing.JTextField();
        txtTransaksi = new javax.swing.JTextField();
        btnFinal = new javax.swing.JButton();
        txtDTransaksi = new javax.swing.JTextField();
        btnPilih = new javax.swing.JButton();
        lbTotal = new javax.swing.JLabel();
        btnHitung = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtKeterangan = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(453, 453));

        pnKasir.setPreferredSize(new java.awt.Dimension(960, 600));
        pnKasir.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbTitleKasir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnKasir.add(lbTitleKasir, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 621, 70));

        txtIDPegawai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIDPegawai.setBorder(null);
        txtIDPegawai.setEnabled(false);
        txtIDPegawai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDPegawaiActionPerformed(evt);
            }
        });
        pnKasir.add(txtIDPegawai, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 163, -1));

        txtTransaksi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTransaksi.setBorder(null);
        txtTransaksi.setEnabled(false);
        pnKasir.add(txtTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 163, -1));

        btnFinal.setIcon(new javax.swing.ImageIcon("C:\\Users\\fikri sabili\\Downloads\\A pemancingan\\btn proses.png")); // NOI18N
        btnFinal.setBorder(null);
        btnFinal.setEnabled(false);
        btnFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalActionPerformed(evt);
            }
        });
        pnKasir.add(btnFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 430, 100, 40));

        txtDTransaksi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDTransaksi.setBorder(null);
        txtDTransaksi.setEnabled(false);
        pnKasir.add(txtDTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 163, -1));

        btnPilih.setBackground(new java.awt.Color(232, 207, 190));
        btnPilih.setIcon(new javax.swing.ImageIcon("C:\\Users\\fikri sabili\\Downloads\\A pemancingan\\btn pilih01.png")); // NOI18N
        btnPilih.setBorder(null);
        btnPilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihActionPerformed(evt);
            }
        });
        pnKasir.add(btnPilih, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, -1, 40));
        pnKasir.add(lbTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 360, 150, 35));

        btnHitung.setIcon(new javax.swing.ImageIcon("C:\\Users\\fikri sabili\\Downloads\\A pemancingan\\btn hitung 01.png")); // NOI18N
        btnHitung.setBorder(null);
        btnHitung.setEnabled(false);
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });
        pnKasir.add(btnHitung, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 430, 180, 40));
        pnKasir.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 82, -1, -1));

        txtKeterangan.setColumns(20);
        txtKeterangan.setRows(5);
        jScrollPane1.setViewportView(txtKeterangan);

        pnKasir.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, 400, 190));
        pnKasir.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 330, -1, -1));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\fikri sabili\\Downloads\\A pemancingan\\kasir_1 (1).png")); // NOI18N
        pnKasir.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        jLabel6.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnKasir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnKasir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalActionPerformed
        // Tanggal
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String datetime = LocalDateTime.now().format(formatter);

        // Insert into tabel transaksi
        try {
            cn = Koneksi.koneksiDB();
            String query1 = "INSERT INTO transaksi (id_transaksi, keterangan";
            String query2 = "INSERT INTO detail_transaksi (id_detail_transaksi, id_transaksi, id_pegawai, tanggal, total) VALUES (?, ?, ?, ?, ?)";


            // for id_barang_0 to id_barang_9
            for (int i = 0; i < 10; i++) {
                query1 += ", id_barang_" + i;
            }

            // id_transaksi, id_pegawai, keterangan, tanggal
            query1 += ") VALUES (?, ?";

            // for id_barang_0 to id_barang_9
            for (int i = 0; i < 10; i++) {
                query1 += ", ?";
            }

            query1 += ")";

            pst = cn.prepareStatement(query1);
            pst.setString(1, txtTransaksi.getText()); // id_transaksi
            pst.setString(2, txtKeterangan.getText()); // keterangan

            // Add id_barang values from barang array
            for (int i = 0; i < 10; i++) {
                if (barang[i] != null) {
                    pst.setString(3 + i, barang[i]);
                } else {
                    pst.setNull(3 + i, Types.VARCHAR);
                }
            }

            pst.executeUpdate();
            pst = cn.prepareStatement(query2);
            pst.setString(1, txtDTransaksi.getText()); // id_detail_transaksi
            pst.setString(2, txtTransaksi.getText()); // id_transaksi
            pst.setString(3, txtIDPegawai.getText()); // id_pegawai
            pst.setString(4, datetime); // tanggal
            pst.setString(5, lbTotal.getText()); // total

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Transaksi berhasil !!!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Transaksi gagal, " + e.getMessage());
        }

        btnFinal.setEnabled(false);
        btnPilih.setEnabled(true);
        btnHitung.setEnabled(false);
    }//GEN-LAST:event_btnFinalActionPerformed

    private void btnPilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihActionPerformed
        new FormPilihBarangFrame().setVisible(true);
    }//GEN-LAST:event_btnPilihActionPerformed

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
        int totalPrice = 0; // Total harga
        HashMap<String, Integer> itemCount = new HashMap<>(); // Map untuk menyimpan jumlah barang
        HashMap<String, String> namaMap = new HashMap<>(); // Map untuk menyimpan pemetaan id_barang -> nama

        // Hitung kemunculan setiap item dalam array barang dan ambil nama dari database
        for (String item : barang) {
            if (item != null) {
                // Periksa apakah item sudah ada dalam map itemCount
                if (itemCount.containsKey(item)) {
                    // Jika ya, tambahkan jumlahnya
                    itemCount.put(item, itemCount.get(item) + 1);
                } else {
                    // Jika tidak, inisialisasi jumlah dengan 1
                    itemCount.put(item, 1);
                    try {
                        // Ambil koneksi ke database
                        cn = Koneksi.koneksiDB();
                        String query = "SELECT * FROM barang WHERE id_barang = ?";
                        pst = cn.prepareStatement(query);
                        pst.setString(1, item);
                        rs = pst.executeQuery();
                        if (rs.next()) {
                            // Ambil nama dari hasil pencarian
                            String nama = rs.getString("nama");
                            // Simpan pemetaan id_barang -> nama dalam namaMap
                            namaMap.put(item, nama);
                        }
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                    }
                }
            }
        }

        // Buat StringBuilder untuk menyusun hasil akhir
        StringBuilder result = new StringBuilder();

        // Iterasi melalui array barang untuk menyisipkan item dengan jumlah
        Set<String> uniqueItems = new HashSet<>();
        for (String item : barang) {
            if (item != null && !uniqueItems.contains(item)) { // Jika item belum ditambahkan sebelumnya
                uniqueItems.add(item); // Tandai item sebagai sudah ditambahkan
                // Ambil nama dari namaMap menggunakan id_barang
                String nama = namaMap.get(item);
                // Periksa apakah jumlahnya lebih dari 1, tambahkan "x[jumlah]"
                if (itemCount.get(item) > 1) {
                    result.append(nama).append(" x").append(itemCount.get(item));
                } else {
                    result.append(nama);
                }
                result.append("\n"); // Tambahkan baris baru
            }
        }
        txtKeterangan.setText(result.toString());

        // Calculate the total price
        for (String barangs : barang) {
            if (barangs != null) {
                try {
                    cn = Koneksi.koneksiDB();
                    String query = "SELECT * FROM barang WHERE id_barang = ?";
                    pst = cn.prepareStatement(query);
                    pst.setString(1, barangs);
                    rs = pst.executeQuery();
                    if (rs.next()) {
                        int harga = rs.getInt("harga");
                        // Ambil keuntungan 2000
                        totalPrice += harga + 2000;
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                }
            }
        }

        lbTotal.setText(String.valueOf(totalPrice));
        btnFinal.setEnabled(true);
    }//GEN-LAST:event_btnHitungActionPerformed

    private void txtIDPegawaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDPegawaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDPegawaiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinal;
    public static javax.swing.JButton btnHitung;
    private javax.swing.JButton btnPilih;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitleKasir;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JPanel pnKasir;
    private javax.swing.JTextField txtDTransaksi;
    private javax.swing.JTextField txtIDPegawai;
    private javax.swing.JTextArea txtKeterangan;
    private javax.swing.JTextField txtTransaksi;
    // End of variables declaration//GEN-END:variables
}
